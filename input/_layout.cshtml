<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=Edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <link rel="apple-touch-icon" sizes="180x180" href="/assets/favicons/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicons/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicons/favicon-16x16.png">
        <link rel="manifest" href="/assets/favicons/site.webmanifest">
        <link rel="shortcut icon" type="image/png" href="/assets/favicons/favicon.ico"/>
        <link rel="mask-icon" href="/assets/favicons/safari-pinned-tab.svg" color="#e9ecef">
        <meta name="msapplication-config" content="/assets/favicons/browserconfig.xml" />
        <meta name="msapplication-TileColor" content="#e9ecef">
        <meta name="theme-color" content="#e9ecef">

        <link href="/assets/bootstrap/bootstrap.css" rel="stylesheet" />
        <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;700&family=Roboto+Slab:wght@400;700&family=Roboto:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap" rel="stylesheet" data-no-mirror>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/prismjs@1.19.0/themes/prism.css">
        <link href="/assets/css/styles.css" rel="stylesheet" />

        <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
        <script src="https://kit.fontawesome.com/a1cad7ed9a.js" crossorigin="anonymous" data-no-mirror></script>
        <script src="https://cdn.jsdelivr.net/npm/mermaid@8.4.8/dist/mermaid.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/svg-pan-zoom@3.6.1/dist/svg-pan-zoom.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/prismjs@1.19.0/components/prism-core.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/prismjs@1.19.0/plugins/autoloader/prism-autoloader.min.js" data-no-mirror></script>
        <script src="https://cdn.jsdelivr.net/npm/quicklink@2.0.0/dist/quicklink.umd.js"></script>
        
		@RenderSection(SectionNames.Head, false)

        @{
            string title = @Document.ContainsKey(Keys.Title) ? $"Statiq - {Document.GetString(Keys.Title)}" : "Statiq";
        }
        <title>@title</title>
    </head>
    <body class="d-flex flex-column">
        <div class="flex-grow-1 d-flex flex-column">
            <div class="bg-nav">
                <div class="container-xl py-3">
                    <div class="row">
                        <div class="offset-lg-2 col-12 col-lg-8 px-0">
                            <nav class="navbar navbar-expand-md navbar-light align-items-start">
                                <a class="navbar-brand" href="/"><img id="logo" src="/assets/statiq.svg" alt="Statiq Framework"></a>
                                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapse-topnav" aria-controls="collapse-topnav" aria-expanded="false" aria-label="Toggle navigation">
                                    <span class="navbar-toggler-icon"></span>
                                </button>
                                <div id="collapse-topnav" class="collapse navbar-collapse flex-wrap">
                                    <ul class="navbar-nav mr-auto">
                                        <li id="nav-web" class="nav-item">
                                            <a class="nav-link text-blue font-weight-light font-size-lg" href="/web">Web</a>
                                        </li>
                                        <li class="nav-item mx-3 border-right d-none d-md-block"></li>
                                        <li id="nav-docs" class="nav-item">
                                            <a class="nav-link text-orange font-weight-light font-size-lg" href="/docs">Docs</a>
                                        </li>
                                        <li class="nav-item mx-3 border-right d-none d-md-block"></li>
                                        <li id="nav-framework" class="nav-item">
                                            <a class="nav-link text-purple font-weight-light font-size-lg" href="/framework">Framework</a>
                                        </li>
                                    </ul>
                                    <ul class="navbar-nav">
                                        <li class="nav-item">
                                            <a class="nav-link" href="/news">News</a>
                                        </li>
                                        @*
                                        <li class="nav-item">
                                            <a class="nav-link" href="/api">API</a>
                                        </li>
                                        *@
                                        <li class="nav-item">
                                            <a class="nav-link" href="https://github.com/statiqdev"><i class="fab fa-github"></i> GitHub</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" href="https://twitter.com/statiqdev"><i class="fab fa-twitter"></i> Twitter</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" href="https://github.com/statiqdev/Discussions/discussions"><i class="fad fa-question-circle"></i> Get Help</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link font-weight-bold text-red" href="/support"><i class="fad fa-heart icon-red"></i> Support</a>
                                        </li>
                                    </ul>
                                </div>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
            @if (IsSectionDefined(SectionNames.Splash))
            {
                @RenderSection(SectionNames.Splash, false)
            }
            @{
                string section = Document.Destination.Segments.Length > 1 ? Document.Destination.Segments[0].ToString() : null;
                IDocument root = OutputPages.Get(section + "/index.html");
            }
            <div class="flex-grow-1 d-flex flex-column @(section != null ? "section-undefined section-" + section : null)">
                @if(section != null)
                {
                    <div id="titlebar" class="py-4">
                        <div class="container-xl">
                            <div class="row">
                                @{
                                    string titleBarClasses = Document.GetBool(SiteKeys.NoSidebar) ? string.Empty : "offset-md-3 offset-lg-2";
                                }
                                <div class="@titleBarClasses offset-lg-2 col-12 col-lg-8 px-3 px-lg-0 w-100 d-flex align-items-end">
                                    <div class="flex-grow-1">
                                        <div class="breadcrumbs text-uppercase d-flex flex-column flex-md-row">
                                            @foreach (IDocument parent in OutputPages.GetAncestorsOf(Document, Document.IdEquals(root)).Reverse().Skip(1))
                                            {
                                                <span>@Html.DocumentLink(parent, parent.GetString(SiteKeys.BreadcrumbTitle, parent.GetTitle()))</span>
                                            }
                                        </div>
                                        <div class="text-white m-0 title">
                                            @(Document.GetString(Keys.Title) ?? Document.GetTitle())                                            
                                            @if (Document.GetInt(Keys.Index) > 1)
                                            {
                                                <small>(Page @Document.GetString(Keys.Index))</small>
                                            }
                                        </div>
                                        @if (IsSectionDefined(SectionNames.Subtitle))
                                        {
                                            @RenderSection(SectionNames.Subtitle, false)
                                        }
                                    </div>
                                    @if (!Document.GetBool(SiteKeys.NoSidebar))
                                    {
                                        <div class="navbar navbar-expand-md navbar-dark p-0">
                                            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapse-sidebar" aria-controls="collapse-sidebar" aria-expanded="false" aria-label="Toggle navigation">
                                                <span class="navbar-toggler-icon"></span>
                                            </button>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="undertitle">
                        <div class="container-xl">                            
                            <div class="row">
                                @if (Document.GetBool(SiteKeys.NoSidebar))
                                {
                                    <div class="offset-lg-2 col-12 col-lg-8 bg-white">
                                    </div>
                                }
                                else
                                {
                                    <div class="col-md-3 col-lg-2 bg-section">
                                    </div>
                                    <div class="col-md-9 col-lg-8 bg-white">
                                    </div>
                                }
                                <div class="col-lg-2 d-none d-lg-block bg-section">
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="flex-grow-1 d-flex flex-column">
                    @if (Document.GetBool(SiteKeys.NoContainer))
                    {
                        <div id="content" class="bg-white">
                            @RenderBody()
                        </div>
                    }
                    else
                    {
                        <div class="container-xl flex-grow-1 d-flex flex-column">
                            <div class="row flex-grow-1 align-items-stretch">
                                @{
                                    if (root == null || Document.GetBool(SiteKeys.NoSidebar))
                                    {
                                        if (IsSectionDefined(SectionNames.Sidebar))
                                        {
                                            IgnoreSection(SectionNames.Sidebar);
                                        }

                                        <div id="content" class="offset-lg-2 col-12 col-lg-8 p-4 pt-md-0 bg-white">
                                            @RenderBody()
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-3 col-lg-2 bg-body">
                                            <div id="collapse-sidebar" class="sidebar collapse px-0 px-md-3 pt-3">
                                                @if (IsSectionDefined(SectionNames.Sidebar))
                                                {
                                                    @RenderSection(SectionNames.Sidebar, false)
                                                }
                                                else
                                                {
                                                    <div class="sidebar-nav-item @(Document.IdEquals(root) ? "active" : null)">
                                                        @Html.DocumentLink(root)
                                                    </div>

                                                    @foreach (IDocument document in OutputPages.GetChildrenOf(root))
                                                    {
                                                        <div class="sidebar-nav-item @(Document.IdEquals(document) ? "active" : null) @(OutputPages.GetChildrenOf(document).Any() ? "has-children" : null)">
                                                            @Html.DocumentLink(document)
                                                        </div>

                                                        @if (OutputPages.GetChildrenOf(document).Any())
                                                        {
                                                            <div class="sidebar-nav-children">
                                                                @foreach (IDocument child in OutputPages.GetChildrenOf(document))
                                                                {                                                                
                                                                    <div class="sidebar-nav-item @(Document.IdEquals(child) ? "active" : null) @(OutputPages.GetChildrenOf(child).Any() ? "has-children" : null)">
                                                                        @Html.DocumentLink(child)
                                                                    </div>

                                                                    @if (OutputPages.GetChildrenOf(child).Any())
                                                                    {
                                                                        <div class="sidebar-nav-children">
                                                                            @foreach (IDocument child2 in OutputPages.GetChildrenOf(child))
                                                                            {
                                                                                <div class="sidebar-nav-item @(Document.IdEquals(child2) ? "active" : null)">
                                                                                    @Html.DocumentLink(child2)
                                                                                </div>
                                                                            }
                                                                        </div>
                                                                    }
                                                                }
                                                            </div>
                                                        }
                                                    }
                                                }
                                            </div>
                                        </div>
                                        <div id="content" class="col-md-9 col-lg-8 p-4 pt-md-0 bg-white">
                                            @RenderBody()

                                            @if (!Document.GetBool(SiteKeys.NoChildPages) && OutputPages.GetChildrenOf(Document).Any())
                                            {
                                                <h4 class="h-section mb-2">Child Pages</h4>
                                                @foreach(IDocument child in OutputPages.GetChildrenOf(Document))
                                                {
                                                    string excerpt = child.GetString(Statiq.Html.HtmlKeys.Excerpt);
                                                    <div>
                                                        <div class="p-3 mb-2 bg-light page-box">
                                                            <h4>@Html.DocumentLink(child)</h4>
                                                            @if(!string.IsNullOrEmpty(excerpt))
                                                            {
                                                                <div class="font-size-sm">@Html.Raw(excerpt)</div>
                                                            }
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    }
                                }
                                <div class="col-lg-2 d-none d-lg-block bg-body pl-3 pt-3">
                                    @{
                                        IReadOnlyList<IDocument> headings = Document.GetDocumentList(Statiq.Html.HtmlKeys.Headings);
                                        if (headings.Count > 0)
                                        {
                                            <div class="border-bottom mb-3">
                                                <p class="small font-weight-bold">On This Page</p>
                                                @foreach (IDocument heading in headings)
                                                {
                                                    <p class="small"><a href="#@(heading.GetString(Statiq.Html.HtmlKeys.HeadingId))">@(await heading.GetContentStringAsync())</a></p>
                                                }
                                            </div>
                                        }
                                    }
                                    @if (Document.ContainsKey("EditLink"))
                                    {
                                        <p class="small font-weight-bold"><a href="@Document.GetString("EditLink")"><i class="fad fa-pencil"></i> Edit This Page</a></p>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div id="footer" class="p-3 text-white">
            <div class="container-xl">
                <div class="row">
                    <div class="offset-lg-2 col-12 col-lg-8">
                        <div class="text-light text-center">
                            <a href="/web" class="text-light pr-2 mr-1 border-right">Web</a>
                            <a href="/docs" class="text-light pr-2 mr-1 border-right">Docs</a>
                            <a href="/framework" class="text-light">Framework</a>
                        </div>
                        <div class="text-light text-center font-size-sm">
                            <a href="/news" class="text-light pr-2 mr-1">News</a>
                            <a href="https://github.com/statiqdev" class="text-light pr-2 mr-1"><i class="fab fa-github"></i> GitHub</a>
                            <a href="https://twitter.com/statiqdev" class="text-light pr-2 mr-1"><i class="fab fa-twitter"></i> Twitter</a>
                            <a class="text-light font-weight-bold" href="/support"><i class="fad fa-heart"></i> Support</a>
                        </div>
                        <div class="pt-2 font-size-sm text-muted text-center">
                            © @DateTime.Today.Year Statiq/Dave Glick
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <script>
            $(document).ready(function() {
                quicklink.listen();
                
                mermaid.initialize(
                {
                    flowchart:
                    {
                        useMaxWidth: false
                    },
					startOnLoad: false,
					cloneCssStyles: false
                });     
                mermaid.init(undefined, ".mermaid");

                // Remove the max-width setting that Mermaid sets
                var mermaidSvg = $('.mermaid svg');
                mermaidSvg.addClass('img-fluid');
                mermaidSvg.css('max-width', '');

                // Make it scrollable
				var target = document.querySelector(".mermaid svg");
				if(target !== null)
				{
					var panZoom = window.panZoom = svgPanZoom(target, {
						zoomEnabled: true,
						controlIconsEnabled: true,
						fit: true,
						center: true,
                        maxZoom: 20,
                        zoomScaleSensitivity: 0.6
					});			                          

                    // Do the reset once right away to fit the diagram
                    panZoom.resize();
                    panZoom.fit();
                    panZoom.center();
                    
                    $(window).resize(function(){
                        panZoom.resize();
                        panZoom.fit();
                        panZoom.center();
                    });
				}
            });
        </script>
        
		@RenderSection(SectionNames.Scripts, false)
    </body>
</html>